/**
* DevExpress Dashboard (data-source-wizard-extension.d.ts)
* Version:  20.1.6
* Build date: Jul 17, 2020
* Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import DxQueryBuilder from '@devexpress/analytics-core/dx-querybuilder';
import * as ko from 'knockout';
import { IExtension } from '../../common/common-interfaces';
import { DashboardControl } from '../../common/dashboard-control';
import { EventSubscriber, OptionsManager } from '../../common/internal/_options-manager';
import { Dashboard } from '../../model/dashboard';
import { DataSource } from '../../model/data-sources/data-source';
import { JsonDataSource } from '../../model/data-sources/json-data-source';
import { SqlDataSource } from '../../model/data-sources/sql-data-source';
import { Parameter } from '../../model/parameters/parameter';
import { IDashboardDataSourceWizardConnectionStrings } from './models/data-source-wizard-model';
import { DashboardRequestWrapper } from './models/_data-source-wizard-model';
import { DashboardQueryWizard } from './wizards/_edit-query-wizard';
export interface DataSourceWizardExtensionOptions {
    enableCustomSql?: boolean;
    allowCreateNewJsonConnection?: boolean;
    wizardSettings?: IDashboardDataSourceWizardSettings;
    onCustomizeDataSourceWizard?: (args: IDashboardWizardEventArgs) => void;
}
export interface DataSourceWizardExtensionEvents {
    customizeDataSourceWizard: IDashboardWizardEventArgs;
}
export interface IDashboardDataSourceWizardSettings extends DxQueryBuilder.Analytics.Wizard.IDataSourceWizardSettings {
    enableOlapDataSource?: boolean;
}
export declare type DataSourceWizardType = 'EditQueryWizard' | 'EditJsonDataSourceWizard' | 'DataSourceWizard' | 'MultiQueryDataSourceWizard';
export interface IDashboardWizardEventArgs extends DxQueryBuilder.Analytics.Wizard.IWizardEventArgs<DxQueryBuilder.Analytics.Wizard.BaseWizard> {
    type: DataSourceWizardType;
}
export declare class DataSourceWizardExtension implements IExtension {
    private dashboardControl;
    private static _convertDataSource;
    static _renameDataMember(dashboard: Dashboard, dataSource: DataSource, oldDataMember: string, newDataMember: string): void;
    private _subscriptions;
    protected _requestWrapper: DashboardRequestWrapper;
    private _getConnectionStringsCallback;
    private _loadingPanelVisible;
    private _wizardElement;
    private _defaultOptions;
    protected _dashboardParameters: ko.Computed<Array<Parameter>>;
    protected _optionsManager: OptionsManager<DataSourceWizardExtensionOptions, DataSourceWizardExtensionEvents>;
    private _customTemplate;
    isCustomSqlEnabled: boolean;
    name: string;
    on: EventSubscriber<DataSourceWizardExtensionEvents>;
    off: EventSubscriber<DataSourceWizardExtensionEvents>;
    constructor(dashboardControl: DashboardControl, options?: DataSourceWizardExtensionOptions);
    start(): void;
    stop(): void;
    private _createEditQueryWizard;
    protected createDataSourceWizard(connectionStrings: IDashboardDataSourceWizardConnectionStrings): DashboardQueryWizard;
    private _createEditJsonDataSourceWizard;
    protected _customizeDataSourceWizard(customizationType: DataSourceWizardType, wizard: DashboardQueryWizard): void;
    protected createWizardIterator(factory: DxQueryBuilder.Analytics.Wizard.PageFactory, stateManager: DxQueryBuilder.Analytics.Wizard.StateManager): DxQueryBuilder.Analytics.Wizard.PageIterator;
    showDataSourceCreatingDialog(): JQueryPromise<DataSource>;
    private _initializeDataSourceWizard;
    showSqlQueryEditingDialog(dashboardSqlDataSource: SqlDataSource, queryName?: string): void;
    _showEditJsonDataSourceDialog(jsonDataSource: JsonDataSource): void;
    private _renderAndStartWizard;
}
export declare class MultiQueryDataSourceWizardExtension extends DataSourceWizardExtension {
    constructor(dashboardControl: DashboardControl, options?: DataSourceWizardExtensionOptions);
    protected createWizardIterator(factory: DxQueryBuilder.Analytics.Wizard.PageFactory, stateManager: DxQueryBuilder.Analytics.Wizard.StateManager): DxQueryBuilder.Analytics.Wizard.PageIterator;
    protected createDataSourceWizard(connectionStrings: IDashboardDataSourceWizardConnectionStrings): DashboardQueryWizard;
}
