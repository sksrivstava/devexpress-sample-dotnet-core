/**
* DevExpress Dashboard (_properties-controller.d.ts)
* Version:  20.1.6
* Build date: Jul 17, 2020
* Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { IDisposable } from '../../model/disposable-object';
import { AccordionTab } from './_accordion-tab';
export interface IPropertiesHolder {
    model: any;
    propertiesTabs: ko.ObservableArray<AccordionTab>;
}
export declare class PropertiesController implements IDisposable {
    private _disposables;
    constructor();
    mainModel: ko.Observable<{
        containingCollection?: ko.ObservableArray<any>;
        data: IPropertiesHolder;
    }>;
    secondaryModel: ko.Observable<{
        containingCollection?: ko.ObservableArray<any>;
        displayText: ko.MaybeSubscribable<string>;
        data: IPropertiesHolder;
    }>;
    private currentTab;
    accordionDataSource: ko.Observable<Array<AccordionTab>>;
    secondaryAccordionDataSource: ko.Observable<Array<AccordionTab>>;
    computator: ko.Computed<void>;
    selectedIndex: ko.Computed<number>;
    secondarySelectedIndex: ko.Observable<number>;
    processDataItemClick: (data: any) => void;
    dispose(): void;
}
