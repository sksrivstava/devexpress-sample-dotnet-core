/**
* DevExpress Dashboard (_tab-container-item-properties-composer.js)
* Version:  20.1.6
* Build date: Jul 17, 2020
* Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var _knockout_utils_1 = require("../../../model/internal/_knockout-utils");
var _dashboard_layout_node_1 = require("../../../model/layout/metadata/_dashboard-layout-node");
var _form_adapter_editors_1 = require("../../form-adapter/_form-adapter-editors");
var _object_properties_wrapper_1 = require("../../form-adapter/_object-properties-wrapper");
var _accordion_tab_1 = require("../../properties-controller/_accordion-tab");
var _collection_editor_viewmodel_base_1 = require("../../ui-widgets/collection-editor/_collection-editor-viewmodel-base");
var _base_properties_composer_1 = require("./_base-properties-composer");
var TabContainerItemPropertiesComposer = (function (_super) {
    __extends(TabContainerItemPropertiesComposer, _super);
    function TabContainerItemPropertiesComposer(editTabPageHandler) {
        var _this = _super.call(this, function () { }) || this;
        _this.editTabPageHandler = editTabPageHandler;
        return _this;
    }
    TabContainerItemPropertiesComposer.prototype._composeTabsCore = function () { };
    TabContainerItemPropertiesComposer.prototype.composeTabs = function (tabContainer, args) {
        var _this = this;
        var tabContainerLayoutItem = args.dashboard.layout().findLayoutItem(tabContainer);
        if (!tabContainerLayoutItem) {
            return [];
        }
        var customItemTemplate = function (itemData, itemIndex, itemElement) {
            var item = ko.unwrap(itemData.item);
            var div = document.createElement('div');
            div.innerText = item && args.dashboard._getDisplayDashboardItem(item).name() || '';
            div.style.fontWeight = tabContainer._activeTabPage() === item ? '800' : 'normal';
            itemElement.appendChild(div);
            return div;
        };
        var refreshCallback = new _collection_editor_viewmodel_base_1.CollectionEditorRefreshCallback();
        var subscriptions = [];
        subscriptions.push(_knockout_utils_1.safeSubscribe({ activeTabPage: tabContainer._activeTabPage }, function (_) { return refreshCallback.refresh(); }));
        subscriptions.push(_knockout_utils_1.subscribeToArrayItemProperties(tabContainerLayoutItem.childNodes, function (node) {
            var tabPage = node.item;
            return tabPage && [tabPage.showItemAsTabPage, tabPage.name].map(function (s) { return s.subscribe(function () { return refreshCallback.refresh(); }); });
        }));
        var collectionEditorOptions = {
            createNewItemHandler: function () { return tabContainerLayoutItem._createTabPage(); },
            editItemHandler: function (layoutItem, args) { return _this.editTabPageHandler(layoutItem.item, args); },
            removeItemHandler: function (layoutItem) { return layoutItem._createViewModel().delete(); },
            enableRemoveItem: function () { return tabContainerLayoutItem.childNodes().length > 1; },
            reorderItemsHandler: function (layoutItem, direction) {
                var prevActiveTab = tabContainer._activeTabPage();
                var index = tabContainerLayoutItem.childNodes().indexOf(layoutItem);
                tabContainerLayoutItem.childNodes.splice(index, 1);
                tabContainerLayoutItem.childNodes.splice(index + (direction === 'up' ? -1 : 1), 0, layoutItem);
                if (prevActiveTab !== tabContainer._activeTabPage()) {
                    tabContainer._activeTabPage(prevActiveTab);
                }
            },
            customTemplate: customItemTemplate,
            forceRefreshCallback: refreshCallback,
        };
        return [
            new _accordion_tab_1.AccordionTab(_accordion_tab_1.KnownTabs.TabContainer, 'DashboardStringId.DefaultNameTabContainerItem', new _object_properties_wrapper_1.ObjectPropertiesWrapper({
                model: tabContainerLayoutItem,
                properties: [
                    __assign({}, _dashboard_layout_node_1.layoutItemsSerializable, { displayName: 'DashboardWebStringId.TabPages', formAdapterItem: _form_adapter_editors_1.collectionEditor(collectionEditorOptions) })
                ],
                disposableModelSubscriptions: subscriptions,
            }))
        ];
    };
    return TabContainerItemPropertiesComposer;
}(_base_properties_composer_1.DashboardItemPropertiesComposer));
exports.TabContainerItemPropertiesComposer = TabContainerItemPropertiesComposer;
