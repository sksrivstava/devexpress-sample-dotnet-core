/**
* DevExpress Dashboard (_gauge-item-properties-composer.js)
* Version:  20.1.6
* Build date: Jul 17, 2020
* Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _gauge_item_1 = require("../../../model/items/gauge/metadata/_gauge-item");
var _accordion_tab_1 = require("../../properties-controller/_accordion-tab");
var _container_type_selector_1 = require("../container-type-selector/_container-type-selector");
var _base_properties_composer_1 = require("./_base-properties-composer");
var _shared_composers_1 = require("./_shared-composers");
var GaugeItemPropertiesComposer = (function (_super) {
    __extends(GaugeItemPropertiesComposer, _super);
    function GaugeItemPropertiesComposer(customizeHandler) {
        return _super.call(this, customizeHandler) || this;
    }
    GaugeItemPropertiesComposer.prototype._composeTabsCore = function (model) {
        var result = [
            new _accordion_tab_1.StyleAccordionTab(_accordion_tab_1.KnownTabs.Type, 'DashboardWebStringId.Type', this.getTypeWrapper(model)),
            new _accordion_tab_1.AccordionTab(_accordion_tab_1.KnownTabs.Common, 'DashboardWebStringId.AccordionTab.Common', _shared_composers_1.SharedComposers.getCommonWrapper(model, [
                _gauge_item_1.showGaugeCaptions
            ])),
            new _accordion_tab_1.AccordionTab(_accordion_tab_1.KnownTabs.Common, 'DashboardWebStringId.AccordionTab.Layout', _shared_composers_1.SharedComposers.getContentArrangementWrapper(model))
        ];
        return result;
    };
    GaugeItemPropertiesComposer.prototype.getTypeWrapper = function (model) {
        return new _container_type_selector_1.ContainerTypeSelector({
            'CircularFull': { displayName: 'DashboardWebStringId.Gauge.Type.FullQuarterGauge', icon: 'dx-dashboard-gauge-circular-full', group: 'Circular' },
            'CircularHalf': { displayName: 'DashboardWebStringId.Gauge.Type.HalfCircular', icon: 'dx-dashboard-gauge-circular-half', group: 'Circular' },
            'CircularQuarterLeft': { displayName: 'DashboardWebStringId.Gauge.Type.LeftQuarterCircular', icon: 'dx-dashboard-gauge-circular-left-quarter', group: 'Circular' },
            'CircularQuarterRight': { displayName: 'DashboardWebStringId.Gauge.Type.RightQuarterCircular', icon: 'dx-dashboard-gauge-circular-right-quarter', group: 'Circular' },
            'CircularThreeFourth': { displayName: 'DashboardWebStringId.Gauge.Type.ThreeFourthCircular', icon: 'dx-dashboard-gauge-circular-three-fourth', group: 'Circular' },
            'LinearHorizontal': { displayName: 'DashboardWebStringId.Gauge.Type.LinearHorizontal', icon: 'dx-dashboard-gauge-linear-horizontal', group: 'Linear' },
            'LinearVertical': { displayName: 'DashboardWebStringId.Gauge.Type.LinearVertical', icon: 'dx-dashboard-gauge-linear-vertical', group: 'Linear' }
        }, model.viewType);
    };
    return GaugeItemPropertiesComposer;
}(_base_properties_composer_1.DashboardItemPropertiesComposer));
exports.GaugeItemPropertiesComposer = GaugeItemPropertiesComposer;
