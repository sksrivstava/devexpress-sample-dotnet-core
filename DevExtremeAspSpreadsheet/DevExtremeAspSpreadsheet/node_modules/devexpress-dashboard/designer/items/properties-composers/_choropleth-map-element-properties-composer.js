/**
* DevExpress Dashboard (_choropleth-map-element-properties-composer.js)
* Version:  20.1.6
* Build date: Jul 17, 2020
* Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var chorolpeth_map_1 = require("../../../model/items/map/chorolpeth-map");
var chorolpeth_map_item_1 = require("../../../model/items/map/chorolpeth-map-item");
var _chorolpeth_map_1 = require("../../../model/items/map/metadata/_chorolpeth-map");
var _base_metadata_1 = require("../../../model/metadata/_base-metadata");
var _object_properties_wrapper_1 = require("../../form-adapter/_object-properties-wrapper");
var _accordion_tab_1 = require("../../properties-controller/_accordion-tab");
var _container_type_selector_1 = require("../container-type-selector/_container-type-selector");
var _base_properties_composer_1 = require("./_base-properties-composer");
var _shared_composers_1 = require("./_shared-composers");
var ChoroplethMapElementPropertiesComposer = (function (_super) {
    __extends(ChoroplethMapElementPropertiesComposer, _super);
    function ChoroplethMapElementPropertiesComposer(customizeHandler, editDeltaFormatHandler) {
        if (editDeltaFormatHandler === void 0) { editDeltaFormatHandler = function (model) { }; }
        var _this = _super.call(this, customizeHandler) || this;
        _this.editDeltaFormatHandler = editDeltaFormatHandler;
        return _this;
    }
    ChoroplethMapElementPropertiesComposer.prototype._composeTabsCore = function (model, args) {
        var typeTab = new _accordion_tab_1.TypeAccordionTab(_accordion_tab_1.KnownTabs.Type, 'DashboardWebStringId.Map.WeightedLegendType', this.getMapTypeWrapper(model, args.containerType)), commonTab = new _accordion_tab_1.AccordionTab(_accordion_tab_1.KnownTabs.Common, 'DashboardWebStringId.Options', new _object_properties_wrapper_1.ObjectPropertiesWrapper({
            model: model,
            properties: [
                _base_metadata_1.name,
                _chorolpeth_map_1.valueName,
                _chorolpeth_map_1.actualValueName,
                _chorolpeth_map_1.deltaName
            ]
        })), result = [typeTab, commonTab];
        if (model instanceof chorolpeth_map_1.DeltaMap) {
            result.push(new _accordion_tab_1.AccordionTab(_accordion_tab_1.KnownTabs.DeltaOptions, 'DashboardWebStringId.Grid.DeltaOptions', _shared_composers_1.SharedComposers.getDeltaOptionsWrapper(model.deltaOptions)));
            result.push(new _accordion_tab_1.AccordionTab(_accordion_tab_1.KnownTabs.DeltaFormats, 'DashboardWebStringId.CardLayout.Editor.FormatOptions', _shared_composers_1.SharedComposers.getDeltaFormatsOptionsWrapper(model, this.editDeltaFormatHandler)));
        }
        return result;
    };
    ChoroplethMapElementPropertiesComposer.prototype.getMapTypeWrapper = function (model, containerType) {
        if (model) {
            return new _container_type_selector_1.ContainerTypeSelector(chorolpeth_map_item_1.ChoroplethMapItem.choroplethMapTypesMap, containerType);
        }
        return null;
    };
    return ChoroplethMapElementPropertiesComposer;
}(_base_properties_composer_1.DataItemContainerPropertiesComposer));
exports.ChoroplethMapElementPropertiesComposer = ChoroplethMapElementPropertiesComposer;
