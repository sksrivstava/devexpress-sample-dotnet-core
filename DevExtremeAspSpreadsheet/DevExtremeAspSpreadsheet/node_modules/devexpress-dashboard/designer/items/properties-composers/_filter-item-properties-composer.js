/**
* DevExpress Dashboard (_filter-item-properties-composer.js)
* Version:  20.1.6
* Build date: Jul 17, 2020
* Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var combo_box_item_1 = require("../../../model/items/filter-items/combo-box-item");
var list_box_item_1 = require("../../../model/items/filter-items/list-box-item");
var _combo_box_item_1 = require("../../../model/items/filter-items/metadata/_combo-box-item");
var _filter_element_item_base_1 = require("../../../model/items/filter-items/metadata/_filter-element-item-base");
var _list_box_item_1 = require("../../../model/items/filter-items/metadata/_list-box-item");
var _tree_view_item_1 = require("../../../model/items/filter-items/metadata/_tree-view-item");
var _accordion_tab_1 = require("../../properties-controller/_accordion-tab");
var _base_properties_composer_1 = require("./_base-properties-composer");
var _shared_composers_1 = require("./_shared-composers");
var FilterItemPropertiesComposer = (function (_super) {
    __extends(FilterItemPropertiesComposer, _super);
    function FilterItemPropertiesComposer(customizeHandler) {
        return _super.call(this, customizeHandler) || this;
    }
    FilterItemPropertiesComposer.prototype._composeTabsCore = function (model) {
        var disabledRules = {};
        disabledRules[_filter_element_item_base_1.showAllValue.propertyName] = function (args) {
            var model = args.model;
            if (model instanceof list_box_item_1.ListBoxItem) {
                return model.listBoxType() === 'Checked';
            }
            if (model instanceof combo_box_item_1.ComboBoxItem) {
                return model.comboBoxType() === 'Checked';
            }
            return false;
        };
        var showAllValuePropertyInfo = _filter_element_item_base_1.showAllValue;
        if (model._useNeutralFilterMode()) {
            showAllValuePropertyInfo.displayName = 'DashboardWebStringId.FilterItem.AllowEmptyFilter';
        }
        var result = [
            new _accordion_tab_1.AccordionTab(_accordion_tab_1.KnownTabs.Common, 'DashboardWebStringId.AccordionTab.Common', _shared_composers_1.SharedComposers.getCommonWrapper(model, [
                _combo_box_item_1.comboBoxType,
                _list_box_item_1.listBoxType,
                _filter_element_item_base_1.showAllValue,
                _tree_view_item_1.autoExpand,
                _filter_element_item_base_1.enableSearch
            ], disabledRules))
        ];
        return result;
    };
    return FilterItemPropertiesComposer;
}(_base_properties_composer_1.DashboardItemPropertiesComposer));
exports.FilterItemPropertiesComposer = FilterItemPropertiesComposer;
