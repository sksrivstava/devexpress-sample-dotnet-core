/**
* DevExpress Dashboard (_field-picker.d.ts)
* Version:  20.1.6
* Build date: Jul 17, 2020
* Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import DxDesigner from '@devexpress/analytics-core/dx-analytics-core';
import * as ko from 'knockout';
import { DataSourceBrowser } from '../../common/_data-source-browser';
import { IDataSourceConsumer } from '../../model/data-sources/data-source';
export declare class FieldListPicker {
    disabled: ko.Observable<boolean>;
    constructor(dataSourceBrowser: DataSourceBrowser, _value: ko.Observable<string>, model: IDataSourceConsumer, disabled: ko.Observable<boolean>);
    itemsProvider: any;
    treeListController: DashboardTreeListFieldController;
    pathToMembers: ko.Computed<string>;
    value: ko.Computed<string>;
    displayValue: ko.Computed<string>;
}
declare class DashboardTreeListFieldController extends DxDesigner.Analytics.Widgets.Internal.TreeListController {
    private _value;
    constructor(_value: ko.Observable<string>);
    hasItems(item: DxDesigner.Analytics.Utils.IDataMemberInfo): boolean;
    canSelect(value: DxDesigner.Analytics.Widgets.Internal.TreeListItemViewModel): boolean;
    select(value: DxDesigner.Analytics.Widgets.Internal.TreeListItemViewModel): void;
}
export {};
