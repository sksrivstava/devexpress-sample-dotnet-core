/**
* DevExpress Dashboard (_grid-item-format-rule-properties-composer.js)
* Version:  20.1.6
* Build date: Jul 17, 2020
* Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _default_1 = require("../../../../data/localization/_default");
var _cells_item_format_rule_1 = require("../../../../model/format-rules/metadata/_cells-item-format-rule");
var grid_columns_1 = require("../../../../model/items/grid/grid-columns");
var _section_descriptors_1 = require("../../../items/_section-descriptors");
var _display_name_provider_1 = require("../../../_display-name-provider");
var _shared_format_rule_properties_composer_1 = require("./_shared-format-rule-properties-composer");
function createGridItemFormatRulePropertiesComposer() {
    return new _shared_format_rule_properties_composer_1.FormatRulePropertiesComposer({
        createDataTypeObservable: _shared_format_rule_properties_composer_1.createDataTypeObservable,
        getCommonFormatRuleProperties: function (formatRule, dashboardItem, dataSourceBrowser) {
            return _shared_format_rule_properties_composer_1.getCommonCellsFormatRuleProperties(formatRule, dashboardItem, grabDataItems(dashboardItem, dataSourceBrowser), grapApplyToItems(dashboardItem, dataSourceBrowser));
        },
        getConditionFormatRuleProperties: function () { return ({ properties: [] }); },
        getMiscFormatRuleProperties: getMiscFormatRuleProperties
    });
}
exports.createGridItemFormatRulePropertiesComposer = createGridItemFormatRulePropertiesComposer;
function getMiscFormatRuleProperties(formatRule, dashboardItem, dataSourceBrowser) {
    var visibilityRules = {};
    visibilityRules[_cells_item_format_rule_1.applyToRow.propertyName] = function (m) { return !formatRule.condition()._isApplyToRowColumnRestricted; };
    return {
        properties: [_cells_item_format_rule_1.applyToRow],
        visibilityFilterRules: visibilityRules
    };
}
function grabDataItems(dashboardItem, dataSourceBrowser) {
    return function () { return dashboardItem
        .columns()
        .filter(function (c) { return !(c instanceof grid_columns_1.GridDeltaColumn) && !(c instanceof grid_columns_1.GridSparklineColumn); })
        .map(function (c) { return ({
        uniqueName: c.actualDataItem.uniqueName(),
        displayName: _display_name_provider_1.getDataItemContainerDisplayName(dataSourceBrowser, dashboardItem, c)
    }); })
        .concat(dashboardItem
        .hiddenMeasures()
        .map(function (m) { return ({
        uniqueName: m.uniqueName(),
        displayName: _default_1.getLocalizationById(_section_descriptors_1.SectionDescriptors.HiddenMeasures.title) + ' - ' + _display_name_provider_1.getDataItemDisplayName(dataSourceBrowser, dashboardItem, m)
    }); })); };
}
function grapApplyToItems(dashboardItem, dataSourceBrowser) {
    return function () { return dashboardItem
        .columns()
        .filter(function (c) { return !(c instanceof grid_columns_1.GridDeltaColumn); })
        .map(function (c) {
        return {
            uniqueName: c.actualDataItem.uniqueName,
            displayName: _display_name_provider_1.getDataItemContainerDisplayName(dataSourceBrowser, dashboardItem, c)
        };
    }); };
}
