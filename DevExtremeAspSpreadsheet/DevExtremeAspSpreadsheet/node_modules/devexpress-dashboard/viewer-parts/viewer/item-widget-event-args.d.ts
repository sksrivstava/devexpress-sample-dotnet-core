/**
* DevExpress Dashboard (item-widget-event-args.d.ts)
* Version:  20.1.6
* Build date: Jul 17, 2020
* Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
/// <reference types="devextreme/dist/ts/dx.all" />
import 'devextreme/ui/widget/ui.widget';
import Widget from 'devextreme/ui/widget/ui.widget';
import { ItemData } from '../../data/item-data/item-data-definitions';
import { ChartItem } from '../../model/items/chart/chart-item';
import { ChartSeries } from '../../model/items/chart/chart-series';
import { Gauge } from '../../model/items/gauge/gauge';
import { GaugeItem } from '../../model/items/gauge/gauge-item';
import { GridColumn } from '../../model/items/grid/grid-columns';
import { GridItem } from '../../model/items/grid/grid-item';
import { DashboardItemBaseEventArgs } from './events-arguments';
export interface ItemWidgetBaseEventArgs extends DashboardItemBaseEventArgs {
    itemData: ItemData;
    chartContext?: ChartContext;
    gridContext?: GridContext;
    gaugeContext?: GaugeContext;
}
export interface ItemWidgetOptionEventArgs extends ItemWidgetBaseEventArgs {
    options: Object;
}
export interface ItemWidgetEventArgs extends ItemWidgetBaseEventArgs {
    getWidget: () => Widget | Element;
}
export declare class ChartContext {
    private _dashboardItem;
    constructor(_dashboardItem: ChartItem);
    getDashboardItemSeries(seriesOptions: DevExpress.viz.ChartSeries): ChartSeries;
}
export declare class GridContext {
    private _dashboardItem;
    constructor(_dashboardItem: GridItem);
    getDashboardItemColumn(columnOptions: DevExpress.ui.GridBaseColumn): GridColumn;
}
export declare class GaugeContext {
    private _dashboardItem;
    constructor(_dashboardItem: GaugeItem);
    getDashboardItemGauge(gaugeOptions: DevExpress.viz.dxLinearGaugeOptions | DevExpress.viz.dxCircularGaugeOptions): Gauge;
}
