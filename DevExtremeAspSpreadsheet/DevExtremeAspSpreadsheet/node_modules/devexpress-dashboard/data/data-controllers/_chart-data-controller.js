/**
* DevExpress Dashboard (_chart-data-controller.js)
* Version:  20.1.6
* Build date: Jul 17, 2020
* Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _localization_ids_1 = require("../_localization-ids");
var _localizer_1 = require("../_localizer");
var _chart_data_controller_proto_1 = require("./_chart-data-controller-proto");
var chartDataController = (function (_super) {
    __extends(chartDataController, _super);
    function chartDataController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    chartDataController.prototype.getArgumentBindingValue = function (argumentPoint, pointIndex) {
        if (this.isQualitativeArgument() || this.isDiscreteArgument()) {
            if (argumentPoint.getParent() != null) {
                return pointIndex.toString();
            }
            else {
                return _localizer_1.localizer.getString(_localization_ids_1.localizationId.ChartTotalValue);
            }
        }
        return argumentPoint.getValue();
    };
    return chartDataController;
}(_chart_data_controller_proto_1.chartDataControllerProto));
exports.chartDataController = chartDataController;
