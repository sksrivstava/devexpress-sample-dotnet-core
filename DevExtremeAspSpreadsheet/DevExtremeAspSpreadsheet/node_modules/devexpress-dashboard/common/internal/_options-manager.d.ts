/**
* DevExpress Dashboard (_options-manager.d.ts)
* Version:  20.1.6
* Build date: Jul 17, 2020
* Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
export declare type EventSubscriber<TEvents> = <K extends Extract<keyof TEvents, string>>(eventName: K, eventHandler: (ev: TEvents[K]) => any) => void;
export declare class OptionsManager<TOptions extends Object, TEvents extends Object> {
    events: EventManager<TEvents>;
    options: TOptions;
    initialize(_defaultOptions: TOptions, options: TOptions, extension: {
        on: EventSubscriber<TEvents>;
        off: EventSubscriber<TEvents>;
    }): void;
    dispose(): void;
}
export declare class EventManager<TEvents> {
    dispose(): void;
    private _handlers;
    raise<K extends Extract<keyof TEvents, string>>(eventName: K, eventArgs: TEvents[K]): void;
    on: EventSubscriber<TEvents>;
    off: EventSubscriber<TEvents>;
}
